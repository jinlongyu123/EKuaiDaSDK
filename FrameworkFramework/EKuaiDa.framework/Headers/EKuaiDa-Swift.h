#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef EKUAIDA_SWIFT_H
#define EKUAIDA_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="EKuaiDa",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSData;

SWIFT_CLASS("_TtC7EKuaiDa8BCommand")
@interface BCommand : NSObject
@property (nonatomic, readonly, copy) NSData * _Nullable cmdData;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface BCommand (SWIFT_EXTENSION(EKuaiDa))
/// 结束指令
- (BCommand * _Nonnull)end;
@end


@interface BCommand (SWIFT_EXTENSION(EKuaiDa))
/// 查询指令
- (BCommand * _Nonnull)searchDeviceState;
@end

@class NSNumber;
enum BTextDirection : NSInteger;
@class NSString;
@class PointCoordinates;
enum BarcodeDirection : NSInteger;
@class UIImage;

@interface BCommand (SWIFT_EXTENSION(EKuaiDa))
/// 添加线条
/// \param x0 起始点x坐标
///
/// \param y0 起始点y坐标
///
/// \param x1 结束点x坐标
///
/// \param y1 结束点y坐标
///
/// \param thickness 线条的宽度
///
- (BCommand * _Nonnull)drawLineWithX0:(NSInteger)x0 y0:(NSInteger)y0 x1:(NSInteger)x1 y1:(NSInteger)y1 thickness:(NSInteger)thickness;
/// 添加反白区域
/// \param x 起始点x坐标
///
/// \param y 起始点y坐标
///
/// \param width 反白区域的宽度
///
/// \param height 反白区域的高度
///
- (BCommand * _Nonnull)drawReverseWithX:(NSInteger)x y:(NSInteger)y width:(NSInteger)width height:(NSInteger)height;
/// 添加矩形
/// <ul>
///   <li>
///     x0: 起始点x坐标
///   </li>
///   <li>
///     y0: 起始点y坐标
///   </li>
///   <li>
///     x1: 结束点x坐标
///   </li>
///   <li>
///     y1: 结束点y坐标
///   </li>
///   <li>
///     thickness: 矩形的宽度
///   </li>
/// </ul>
- (BCommand * _Nonnull)drawBoxWithX0:(NSInteger)x0 y0:(NSInteger)y0 x1:(NSInteger)x1 y1:(NSInteger)y1 thickness:(NSInteger)thickness;
/// 添加文本
/// <ul>
///   <li>
///     direction 打印方向或反白
///   </li>
///   <li>
///     x: 起始点左上角x坐标
///   </li>
///   <li>
///     y: 起始点左上角y坐标
///   </li>
///   <li>
///     font: 字体大小
///   </li>
///   <li>
///     width: 宽度放大倍数
///   </li>
///   <li>
///     height: 高度放大倍数
///   </li>
///   <li>
///     bold: 是否加粗(0-不加粗，1-加粗)
///   </li>
///   <li>
///     data: 文本内容
///   </li>
/// </ul>
- (BCommand * _Nonnull)drawTextWithDirextion:(enum BTextDirection)dirextion x:(NSInteger)x y:(NSInteger)y font:(NSInteger)font width:(NSInteger)width height:(NSInteger)height bold:(BOOL)bold data:(NSString * _Nonnull)data;
- (BCommand * _Nonnull)drawTextWithFontWithDirextion:(enum BTextDirection)dirextion x:(NSInteger)x y:(NSInteger)y font:(NSInteger)font width:(NSInteger)width height:(NSInteger)height bold:(BOOL)bold data:(NSString * _Nonnull)data;
/// 自动换行打印 纵向超出区域不在打印 只适应于横向打印
/// \param coordinates 打印所属区域
///
/// \param font 字体大小
///
/// \param width 宽度放大倍数
///
/// \param height 高度放大倍数
///
- (BCommand * _Nonnull)drawAutoTextWithCoordinates:(PointCoordinates * _Nonnull)coordinates dirextion:(enum BTextDirection)dirextion font:(NSInteger)font width:(NSInteger)width height:(NSInteger)height text:(NSString * _Nonnull)text;
/// 添加条码
/// <ul>
///   <li>
///     direction 打印方向或反白
///   </li>
///   <li>
///     x: 起始点左上角x坐标
///   </li>
///   <li>
///     y: 起始点左上角y坐标
///   </li>
///   <li>
///     narrow: 窄条的宽度
///   </li>
///   <li>
///     ratio: 宽条与窄条的比率
///   </li>
///   <li>
///     height: 条码的高度
///   </li>
///   <li>
///     underText: true-文本可见、false-文本不可见
///   </li>
///   <li>
///     data: 条码内容
///   </li>
/// </ul>
- (BCommand * _Nonnull)drawBarcodeWithDirection:(enum BarcodeDirection)direction x:(NSInteger)x y:(NSInteger)y narrow:(NSInteger)narrow ratio:(NSInteger)ratio height:(NSInteger)height underText:(BOOL)underText data:(NSString * _Nonnull)data;
/// 给定区域居中显示 条码
/// \param coordinates 给定的矩形区域
///
/// \param direction 条码方向
///
/// \param showText 是否显示条码字符串
///
/// \param barHeight 条码高度
///
/// \param data 条码内容
///
///
/// returns:
///
- (BCommand * _Nonnull)drawBarcodeCenterWithCoordinates:(PointCoordinates * _Nonnull)coordinates direction:(enum BTextDirection)direction showText:(BOOL)showText barHeight:(NSInteger)barHeight data:(NSString * _Nonnull)data;
/// 二维码
/// \param x 起始点左上角x坐标
///
/// \param y 起始点左上角y坐标
///
/// \param width 边长的单位宽度(范围是 1 至 32。 默认值为 6)
///
/// \param data 二维码内容
///
- (BCommand * _Nonnull)drawQRCodeWithX:(NSInteger)x y:(NSInteger)y width:(NSInteger)width data:(NSString * _Nonnull)data;
/// 打印图片
/// \param x x坐标
///
/// \param y y坐标
///
/// \param image 图片内容
///
- (BCommand * _Nonnull)drawImageWithX:(NSInteger)x y:(NSInteger)y image:(UIImage * _Nonnull)image;
@end

/// 命令类型
typedef SWIFT_ENUM(NSInteger, BCommandType, closed) {
  BCommandTypeCPCL = 0,
  BCommandTypeTSPL = 1,
};

@class PrintDevice;
@class TemplateRequest;
@class TemplateResponse;

SWIFT_CLASS("_TtC7EKuaiDa8BPrinter")
@interface BPrinter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// sdk初始化
/// <ul>
///   <li>
///     Parameters
///     -appId:  应用ID
///     -appkey: 应用key
///   </li>
/// </ul>
+ (void)preInitWithAppId:(NSString * _Nonnull)appId appKey:(NSString * _Nonnull)appKey;
/// 打印日志
+ (void)setlogEnabledWithEnable:(BOOL)enable;
/// 获取蓝牙的状态
+ (NSInteger)getBluetoothState SWIFT_WARN_UNUSED_RESULT;
/// 开启蓝牙
+ (BOOL)openBluetooth SWIFT_WARN_UNUSED_RESULT;
/// 扫描蓝牙设备
+ (void)scanPrinterDevice:(void (^ _Nonnull)(NSArray<PrintDevice *> * _Nullable, NSError * _Nullable))resultHandler;
/// 取消蓝牙扫描
+ (void)cancelScanPrinterDevice;
/// 获取模版数据
+ (void)getTemplateWithRequest:(TemplateRequest * _Nonnull)request responseCallBack:(void (^ _Nonnull)(TemplateResponse * _Nullable))responseCallBack;
@end


/// 打印机分辨率
typedef SWIFT_ENUM(NSInteger, BPrinterRsolution, closed) {
  BPrinterRsolutionDpi_203 = 0,
  BPrinterRsolutionDpi_306 = 1,
};

@class BSRemotePeer;
@class BSErrorObjc;

SWIFT_CLASS("_TtC7EKuaiDa6BSPeer")
@interface BSPeer : NSObject
/// 发送数据
/// \param data 数据
///
/// \param maxLength 分包发送 每个包最大发送数据量 跟蓝牙模块有关，建议设置100， 20是所有设备都支持的，但是写入速度可能会减慢
///
/// \param remotePeer 设备信息
///
/// \param completionHandler 发送结果回调 此结果表示数据已发送的结果
///
- (void)sendData:(NSData * _Nonnull)data maxLength:(NSInteger)maxLength toRemotePeer:(BSRemotePeer * _Nonnull)remotePeer completionHandler:(void (^ _Nullable)(NSData * _Nonnull, BSRemotePeer * _Nonnull, BSErrorObjc * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7EKuaiDa9BSCentral")
@interface BSCentral : BSPeer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)start;
@end

@class ConnectResult;

@interface BSCentral (SWIFT_EXTENSION(EKuaiDa))
/// 蓝牙连接
/// \param timeout 链接超时时间 默认3秒
///
/// \param remotePeripheral 链接外设
///
/// \param completionHandler 链接结果回调
///
- (void)connect:(NSTimeInterval)timeout remotePeripheral:(PrintDevice * _Nonnull)remotePeripheral completionHandler:(void (^ _Nonnull)(PrintDevice * _Nonnull, ConnectResult * _Nullable))completionHandler;
/// 断开连接
/// \param remotePeripheral 远程设备
///
- (BOOL)disconnectRemotePeripheral:(PrintDevice * _Nonnull)remotePeripheral error:(NSError * _Nullable * _Nullable)error;
@end


@class BSDiscovery;
@class BSDiscoveryChangeObjc;
enum ContinuousScanState : NSInteger;

@interface BSCentral (SWIFT_EXTENSION(EKuaiDa))
- (void)scanObjcWithDurationWithDuration:(NSTimeInterval)duration updateDuplicates:(BOOL)updateDuplicates progressHandler:(void (^ _Nullable)(NSArray<BSDiscovery *> * _Nonnull))progressHandler completionHandler:(void (^ _Nullable)(NSArray<BSDiscovery *> * _Nullable, BSErrorObjc * _Nullable))completionHandler;
- (void)scanContinuouslyObjcWithChangeHanndler:(void (^ _Nonnull)(NSArray<BSDiscoveryChangeObjc *> * _Nonnull, NSArray<BSDiscovery *> * _Nonnull))changeHandler stateHandler:(void (^ _Nullable)(enum ContinuousScanState))stateHandler duration:(NSTimeInterval)duration inBetweenDelay:(NSTimeInterval)inBetweenDelay updateDuplicates:(BOOL)updateDuplicates errorHandler:(void (^ _Nullable)(BSErrorObjc * _Nonnull))errorHandler;
- (void)interruptScan;
- (BOOL)stop;
@end


SWIFT_CLASS("_TtC7EKuaiDa11BSDiscovery")
@interface BSDiscovery : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable localName;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull advertisementData;
@property (nonatomic, readonly, strong) PrintDevice * _Nonnull remotePeripheral;
@property (nonatomic, readonly) NSInteger RSSI;
- (nonnull instancetype)initWithAdvertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData remoteperipheral:(PrintDevice * _Nonnull)remoteperipheral RSSI:(NSInteger)RSSI OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7EKuaiDa21BSDiscoveryChangeObjc")
@interface BSDiscoveryChangeObjc : NSObject
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, KKDispatchFormHeaderStyle, "BSDiscoveryChangeState", closed) {
  KKDispatchFormHeaderStyleInsert = 0,
  KKDispatchFormHeaderStyleRemove = 1,
};


SWIFT_CLASS("_TtC7EKuaiDa11BSErrorObjc")
@interface BSErrorObjc : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC7EKuaiDa7BSPoint")
@interface BSPoint : NSObject
@property (nonatomic) NSInteger x;
@property (nonatomic) NSInteger y;
- (nonnull instancetype)initWithX:(NSInteger)x y:(NSInteger)y OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7EKuaiDa12BSRemotePeer")
@interface BSRemotePeer : NSObject
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 文本方向
typedef SWIFT_ENUM(NSInteger, BTextDirection, closed) {
  BTextDirectionTEXT = 0,
  BTextDirectionTEXT90 = 1,
  BTextDirectionTEXT180 = 2,
  BTextDirectionTEXT270 = 3,
};

typedef SWIFT_ENUM(NSInteger, BarCodeType, closed) {
  BarCodeTypeUPCA = 0,
  BarCodeTypeUPCE = 1,
  BarCodeTypeEAN13 = 2,
  BarCodeTypeEAN8 = 3,
  BarCodeTypeCode39 = 4,
  BarCodeTypeCode93 = 5,
  BarCodeTypeCode128 = 6,
};


SWIFT_CLASS("_TtC7EKuaiDa15BarQRCodeLayout")
@interface BarQRCodeLayout : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 条形码方向
typedef SWIFT_ENUM(NSInteger, BarcodeDirection, closed) {
  BarcodeDirectionHorizontal = 0,
  BarcodeDirectionVertical = 1,
};


SWIFT_CLASS("_TtC7EKuaiDa13ConnectResult")
@interface ConnectResult : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, ContinuousScanState, closed) {
  ContinuousScanStateStopped = 0,
  ContinuousScanStateScanning = 1,
  ContinuousScanStateWaiting = 2,
};


/// 德邦快递模版实现
SWIFT_CLASS("_TtC7EKuaiDa10DBTemplate")
@interface DBTemplate : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7EKuaiDa9FontStyle")
@interface FontStyle : NSObject
/// 0:12x24 ASCII, 24x24 中文 GBK 对应字体  tspl： 0， cpcl： 8
/// 1: 8x16 ASCII, 16x16 中文 GBK 对应字体   tspl ：1 ， cpcl ：55
@property (nonatomic) NSInteger font;
/// 字体放大倍数
@property (nonatomic, strong) BSPoint * _Nonnull amplification;
/// 字体 方向
@property (nonatomic) enum BTextDirection direction;
/// 字体加粗 tspl 取值 0 -1， cpcl ；0-5
@property (nonatomic) NSInteger bold;
- (nonnull instancetype)initWithFont:(NSInteger)font amplification:(BSPoint * _Nonnull)amplification direction:(enum BTextDirection)direction bold:(NSInteger)bold OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LengthUnitSystem, closed) {
  LengthUnitSystemMetric = 1,
  LengthUnitSystemEnMetric = 2,
};


SWIFT_CLASS("_TtC7EKuaiDa16PointCoordinates")
@interface PointCoordinates : NSObject
@property (nonatomic) NSInteger x0;
@property (nonatomic) NSInteger x1;
@property (nonatomic) NSInteger y0;
@property (nonatomic) NSInteger y1;
- (nonnull instancetype)initWithX0:(NSInteger)x0 y0:(NSInteger)y0 x1:(NSInteger)x1 y1:(NSInteger)y1 OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 命令类型
typedef SWIFT_ENUM(NSInteger, PrintCommand, closed) {
  PrintCommandCPCL = 0,
  PrintCommandTSPL = 1,
};


SWIFT_CLASS("_TtC7EKuaiDa9PrintData")
@interface PrintData : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7EKuaiDa11PrintDevice")
@interface PrintDevice : BSRemotePeer
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@end


@interface PrintDevice (SWIFT_EXTENSION(EKuaiDa))
- (BOOL)isConnected SWIFT_WARN_UNUSED_RESULT;
@end

@class TsplPaperSize;
@class TsplVerticalGap;
@class TsplCmdContent;

/// TSPL commond 配置
SWIFT_CLASS("_TtC7EKuaiDa24TSPlCommondConfiguration")
@interface TSPlCommondConfiguration : NSObject
/// 标签size
@property (nonatomic, strong) TsplPaperSize * _Nonnull paper;
/// 一般垂直间距
@property (nonatomic, strong) TsplVerticalGap * _Nonnull gap;
/// 长度系统 默认 mm 指定长度标准后，除特殊指定标准外，之后所有尺寸命令都是以此为准
@property (nonatomic) enum LengthUnitSystem lengthUnit;
/// 该指令用于控制使用剥离模式和切刀模式时调整每张标签停止的位置。
@property (nonatomic) float offset;
/// 该命令用于移动标签的垂直位置。正值将标签从打印方向进一步移动，负值将标签反方向打印。 [-90, 90] 默认设置0
@property (nonatomic) NSInteger shift;
/// 该命令定义标签的参考坐标原点。参考点随打印方向而变化, 以点为单位
@property (nonatomic, strong) BSPoint * _Nullable reference;
/// 该命令用于打印出纸方向和镜像图像。m 0 正常，1 反向; n:   0: 打印正常图像, 1: 打印镜像图像
@property (nonatomic, strong) TsplCmdContent * _Nonnull direction;
@property (nonatomic, strong) BSPoint * _Nullable gapDetect;
- (nonnull instancetype)initWithPaper:(TsplPaperSize * _Nonnull)paper gap:(TsplVerticalGap * _Nonnull)gap lengthUnit:(enum LengthUnitSystem)lengthUnit offset:(float)offset shift:(NSInteger)shift reference:(BSPoint * _Nullable)reference direction:(TsplCmdContent * _Nonnull)direction gapDetect:(BSPoint * _Nullable)gapDetect OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7EKuaiDa15TemplateRequest")
@interface TemplateRequest : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7EKuaiDa16TemplateResponse")
@interface TemplateResponse : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// tspl 命令 值 参数
SWIFT_CLASS("_TtC7EKuaiDa14TsplCmdContent")
@interface TsplCmdContent : NSObject
@property (nonatomic) float m;
@property (nonatomic) float n;
- (nonnull instancetype)initWithM:(float)m n:(float)n OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum TsplSizeUnit : NSInteger;

SWIFT_CLASS("_TtC7EKuaiDa13TsplPaperSize")
@interface TsplPaperSize : NSObject
@property (nonatomic) NSInteger width;
@property (nonatomic) NSInteger height;
@property (nonatomic) enum TsplSizeUnit type;
- (nonnull instancetype)initWithWidth:(NSInteger)width height:(NSInteger)height type:(enum TsplSizeUnit)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 注意：
/// 203 DPI: 1mm=8dots
/// 300 DPI: 1mm=12dots
typedef SWIFT_ENUM(NSInteger, TsplSizeUnit, closed) {
  TsplSizeUnitDot = 0,
  TsplSizeUnitMetric = 1,
  TsplSizeUnitEnMetric = 2,
};


SWIFT_CLASS("_TtC7EKuaiDa15TsplVerticalGap")
@interface TsplVerticalGap : NSObject
@property (nonatomic) float height;
@property (nonatomic) enum LengthUnitSystem unit;
- (nonnull instancetype)initWithHeight:(float)height unit:(enum LengthUnitSystem)unit OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef EKUAIDA_SWIFT_H
#define EKUAIDA_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="EKuaiDa",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSData;

SWIFT_CLASS("_TtC7EKuaiDa8BCommand")
@interface BCommand : NSObject
@property (nonatomic, readonly, copy) NSData * _Nullable cmdData;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface BCommand (SWIFT_EXTENSION(EKuaiDa))
/// 结束指令
- (BCommand * _Nonnull)end;
@end


@interface BCommand (SWIFT_EXTENSION(EKuaiDa))
/// 查询指令
- (BCommand * _Nonnull)searchDeviceState;
@end

@class NSNumber;
enum BTextDirection : NSInteger;
@class NSString;
@class PointCoordinates;
enum BarcodeDirection : NSInteger;
@class UIImage;

@interface BCommand (SWIFT_EXTENSION(EKuaiDa))
/// 添加线条
/// \param x0 起始点x坐标
///
/// \param y0 起始点y坐标
///
/// \param x1 结束点x坐标
///
/// \param y1 结束点y坐标
///
/// \param thickness 线条的宽度
///
- (BCommand * _Nonnull)drawLineWithX0:(NSInteger)x0 y0:(NSInteger)y0 x1:(NSInteger)x1 y1:(NSInteger)y1 thickness:(NSInteger)thickness;
/// 添加反白区域
/// \param x 起始点x坐标
///
/// \param y 起始点y坐标
///
/// \param width 反白区域的宽度
///
/// \param height 反白区域的高度
///
- (BCommand * _Nonnull)drawReverseWithX:(NSInteger)x y:(NSInteger)y width:(NSInteger)width height:(NSInteger)height;
/// 添加矩形
/// <ul>
///   <li>
///     x0: 起始点x坐标
///   </li>
///   <li>
///     y0: 起始点y坐标
///   </li>
///   <li>
///     x1: 结束点x坐标
///   </li>
///   <li>
///     y1: 结束点y坐标
///   </li>
///   <li>
///     thickness: 矩形的宽度
///   </li>
/// </ul>
- (BCommand * _Nonnull)drawBoxWithX0:(NSInteger)x0 y0:(NSInteger)y0 x1:(NSInteger)x1 y1:(NSInteger)y1 thickness:(NSInteger)thickness;
/// 添加文本
/// <ul>
///   <li>
///     direction 打印方向或反白
///   </li>
///   <li>
///     x: 起始点左上角x坐标
///   </li>
///   <li>
///     y: 起始点左上角y坐标
///   </li>
///   <li>
///     font: 字体大小
///   </li>
///   <li>
///     width: 宽度放大倍数
///   </li>
///   <li>
///     height: 高度放大倍数
///   </li>
///   <li>
///     bold: 是否加粗(0-不加粗，1-加粗)
///   </li>
///   <li>
///     data: 文本内容
///   </li>
/// </ul>
- (BCommand * _Nonnull)drawTextWithDirextion:(enum BTextDirection)dirextion x:(NSInteger)x y:(NSInteger)y font:(NSInteger)font width:(NSInteger)width height:(NSInteger)height bold:(BOOL)bold data:(NSString * _Nonnull)data;
- (BCommand * _Nonnull)drawTextWithFontWithDirextion:(enum BTextDirection)dirextion x:(NSInteger)x y:(NSInteger)y font:(NSInteger)font width:(NSInteger)width height:(NSInteger)height bold:(BOOL)bold data:(NSString * _Nonnull)data;
/// 自动换行打印 纵向超出区域不在打印 只适应于横向打印
/// \param coordinates 打印所属区域
///
/// \param font 字体大小
///
/// \param width 宽度放大倍数
///
/// \param height 高度放大倍数
///
- (BCommand * _Nonnull)drawAutoTextWithCoordinates:(PointCoordinates * _Nonnull)coordinates dirextion:(enum BTextDirection)dirextion font:(NSInteger)font width:(NSInteger)width height:(NSInteger)height text:(NSString * _Nonnull)text;
/// 添加条码
/// <ul>
///   <li>
///     direction 打印方向或反白
///   </li>
///   <li>
///     x: 起始点左上角x坐标
///   </li>
///   <li>
///     y: 起始点左上角y坐标
///   </li>
///   <li>
///     narrow: 窄条的宽度
///   </li>
///   <li>
///     ratio: 宽条与窄条的比率
///   </li>
///   <li>
///     height: 条码的高度
///   </li>
///   <li>
///     underText: true-文本可见、false-文本不可见
///   </li>
///   <li>
///     data: 条码内容
///   </li>
/// </ul>
- (BCommand * _Nonnull)drawBarcodeWithDirection:(enum BarcodeDirection)direction x:(NSInteger)x y:(NSInteger)y narrow:(NSInteger)narrow ratio:(NSInteger)ratio height:(NSInteger)height underText:(BOOL)underText data:(NSString * _Nonnull)data;
/// 给定区域居中显示 条码
/// \param coordinates 给定的矩形区域
///
/// \param direction 条码方向
///
/// \param showText 是否显示条码字符串
///
/// \param barHeight 条码高度
///
/// \param data 条码内容
///
///
/// returns:
///
- (BCommand * _Nonnull)drawBarcodeCenterWithCoordinates:(PointCoordinates * _Nonnull)coordinates direction:(enum BTextDirection)direction showText:(BOOL)showText barHeight:(NSInteger)barHeight data:(NSString * _Nonnull)data;
/// 二维码
/// \param x 起始点左上角x坐标
///
/// \param y 起始点左上角y坐标
///
/// \param width 边长的单位宽度(范围是 1 至 32。 默认值为 6)
///
/// \param data 二维码内容
///
- (BCommand * _Nonnull)drawQRCodeWithX:(NSInteger)x y:(NSInteger)y width:(NSInteger)width data:(NSString * _Nonnull)data;
/// 打印图片
/// \param x x坐标
///
/// \param y y坐标
///
/// \param image 图片内容
///
- (BCommand * _Nonnull)drawImageWithX:(NSInteger)x y:(NSInteger)y image:(UIImage * _Nonnull)image;
@end

/// 命令类型
typedef SWIFT_ENUM(NSInteger, BCommandType, closed) {
  BCommandTypeCPCL = 0,
  BCommandTypeTSPL = 1,
};

@class PrintDevice;
@class TemplateRequest;
@class TemplateResponse;

SWIFT_CLASS("_TtC7EKuaiDa8BPrinter")
@interface BPrinter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// sdk初始化
/// <ul>
///   <li>
///     Parameters
///     -appId:  应用ID
///     -appkey: 应用key
///   </li>
/// </ul>
+ (void)preInitWithAppId:(NSString * _Nonnull)appId appKey:(NSString * _Nonnull)appKey;
/// 打印日志
+ (void)setlogEnabledWithEnable:(BOOL)enable;
/// 获取蓝牙的状态
+ (NSInteger)getBluetoothState SWIFT_WARN_UNUSED_RESULT;
/// 开启蓝牙
+ (BOOL)openBluetooth SWIFT_WARN_UNUSED_RESULT;
/// 扫描蓝牙设备
+ (void)scanPrinterDevice:(void (^ _Nonnull)(NSArray<PrintDevice *> * _Nullable, NSError * _Nullable))resultHandler;
/// 取消蓝牙扫描
+ (void)cancelScanPrinterDevice;
/// 获取模版数据
+ (void)getTemplateWithRequest:(TemplateRequest * _Nonnull)request responseCallBack:(void (^ _Nonnull)(TemplateResponse * _Nullable))responseCallBack;
@end


/// 打印机分辨率
typedef SWIFT_ENUM(NSInteger, BPrinterRsolution, closed) {
  BPrinterRsolutionDpi_203 = 0,
  BPrinterRsolutionDpi_306 = 1,
};

@class BSRemotePeer;
@class BSErrorObjc;

SWIFT_CLASS("_TtC7EKuaiDa6BSPeer")
@interface BSPeer : NSObject
/// 发送数据
/// \param data 数据
///
/// \param maxLength 分包发送 每个包最大发送数据量 跟蓝牙模块有关，建议设置100， 20是所有设备都支持的，但是写入速度可能会减慢
///
/// \param remotePeer 设备信息
///
/// \param completionHandler 发送结果回调 此结果表示数据已发送的结果
///
- (void)sendData:(NSData * _Nonnull)data maxLength:(NSInteger)maxLength toRemotePeer:(BSRemotePeer * _Nonnull)remotePeer completionHandler:(void (^ _Nullable)(NSData * _Nonnull, BSRemotePeer * _Nonnull, BSErrorObjc * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7EKuaiDa9BSCentral")
@interface BSCentral : BSPeer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)start;
@end

@class ConnectResult;

@interface BSCentral (SWIFT_EXTENSION(EKuaiDa))
/// 蓝牙连接
/// \param timeout 链接超时时间 默认3秒
///
/// \param remotePeripheral 链接外设
///
/// \param completionHandler 链接结果回调
///
- (void)connect:(NSTimeInterval)timeout remotePeripheral:(PrintDevice * _Nonnull)remotePeripheral completionHandler:(void (^ _Nonnull)(PrintDevice * _Nonnull, ConnectResult * _Nullable))completionHandler;
/// 断开连接
/// \param remotePeripheral 远程设备
///
- (BOOL)disconnectRemotePeripheral:(PrintDevice * _Nonnull)remotePeripheral error:(NSError * _Nullable * _Nullable)error;
@end


@class BSDiscovery;
@class BSDiscoveryChangeObjc;
enum ContinuousScanState : NSInteger;

@interface BSCentral (SWIFT_EXTENSION(EKuaiDa))
- (void)scanObjcWithDurationWithDuration:(NSTimeInterval)duration updateDuplicates:(BOOL)updateDuplicates progressHandler:(void (^ _Nullable)(NSArray<BSDiscovery *> * _Nonnull))progressHandler completionHandler:(void (^ _Nullable)(NSArray<BSDiscovery *> * _Nullable, BSErrorObjc * _Nullable))completionHandler;
- (void)scanContinuouslyObjcWithChangeHanndler:(void (^ _Nonnull)(NSArray<BSDiscoveryChangeObjc *> * _Nonnull, NSArray<BSDiscovery *> * _Nonnull))changeHandler stateHandler:(void (^ _Nullable)(enum ContinuousScanState))stateHandler duration:(NSTimeInterval)duration inBetweenDelay:(NSTimeInterval)inBetweenDelay updateDuplicates:(BOOL)updateDuplicates errorHandler:(void (^ _Nullable)(BSErrorObjc * _Nonnull))errorHandler;
- (void)interruptScan;
- (BOOL)stop;
@end


SWIFT_CLASS("_TtC7EKuaiDa11BSDiscovery")
@interface BSDiscovery : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable localName;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull advertisementData;
@property (nonatomic, readonly, strong) PrintDevice * _Nonnull remotePeripheral;
@property (nonatomic, readonly) NSInteger RSSI;
- (nonnull instancetype)initWithAdvertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData remoteperipheral:(PrintDevice * _Nonnull)remoteperipheral RSSI:(NSInteger)RSSI OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7EKuaiDa21BSDiscoveryChangeObjc")
@interface BSDiscoveryChangeObjc : NSObject
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, KKDispatchFormHeaderStyle, "BSDiscoveryChangeState", closed) {
  KKDispatchFormHeaderStyleInsert = 0,
  KKDispatchFormHeaderStyleRemove = 1,
};


SWIFT_CLASS("_TtC7EKuaiDa11BSErrorObjc")
@interface BSErrorObjc : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC7EKuaiDa7BSPoint")
@interface BSPoint : NSObject
@property (nonatomic) NSInteger x;
@property (nonatomic) NSInteger y;
- (nonnull instancetype)initWithX:(NSInteger)x y:(NSInteger)y OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7EKuaiDa12BSRemotePeer")
@interface BSRemotePeer : NSObject
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 文本方向
typedef SWIFT_ENUM(NSInteger, BTextDirection, closed) {
  BTextDirectionTEXT = 0,
  BTextDirectionTEXT90 = 1,
  BTextDirectionTEXT180 = 2,
  BTextDirectionTEXT270 = 3,
};

typedef SWIFT_ENUM(NSInteger, BarCodeType, closed) {
  BarCodeTypeUPCA = 0,
  BarCodeTypeUPCE = 1,
  BarCodeTypeEAN13 = 2,
  BarCodeTypeEAN8 = 3,
  BarCodeTypeCode39 = 4,
  BarCodeTypeCode93 = 5,
  BarCodeTypeCode128 = 6,
};


SWIFT_CLASS("_TtC7EKuaiDa15BarQRCodeLayout")
@interface BarQRCodeLayout : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 条形码方向
typedef SWIFT_ENUM(NSInteger, BarcodeDirection, closed) {
  BarcodeDirectionHorizontal = 0,
  BarcodeDirectionVertical = 1,
};


SWIFT_CLASS("_TtC7EKuaiDa13ConnectResult")
@interface ConnectResult : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, ContinuousScanState, closed) {
  ContinuousScanStateStopped = 0,
  ContinuousScanStateScanning = 1,
  ContinuousScanStateWaiting = 2,
};


/// 德邦快递模版实现
SWIFT_CLASS("_TtC7EKuaiDa10DBTemplate")
@interface DBTemplate : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7EKuaiDa9FontStyle")
@interface FontStyle : NSObject
/// 0:12x24 ASCII, 24x24 中文 GBK 对应字体  tspl： 0， cpcl： 8
/// 1: 8x16 ASCII, 16x16 中文 GBK 对应字体   tspl ：1 ， cpcl ：55
@property (nonatomic) NSInteger font;
/// 字体放大倍数
@property (nonatomic, strong) BSPoint * _Nonnull amplification;
/// 字体 方向
@property (nonatomic) enum BTextDirection direction;
/// 字体加粗 tspl 取值 0 -1， cpcl ；0-5
@property (nonatomic) NSInteger bold;
- (nonnull instancetype)initWithFont:(NSInteger)font amplification:(BSPoint * _Nonnull)amplification direction:(enum BTextDirection)direction bold:(NSInteger)bold OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LengthUnitSystem, closed) {
  LengthUnitSystemMetric = 1,
  LengthUnitSystemEnMetric = 2,
};


SWIFT_CLASS("_TtC7EKuaiDa16PointCoordinates")
@interface PointCoordinates : NSObject
@property (nonatomic) NSInteger x0;
@property (nonatomic) NSInteger x1;
@property (nonatomic) NSInteger y0;
@property (nonatomic) NSInteger y1;
- (nonnull instancetype)initWithX0:(NSInteger)x0 y0:(NSInteger)y0 x1:(NSInteger)x1 y1:(NSInteger)y1 OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 命令类型
typedef SWIFT_ENUM(NSInteger, PrintCommand, closed) {
  PrintCommandCPCL = 0,
  PrintCommandTSPL = 1,
};


SWIFT_CLASS("_TtC7EKuaiDa9PrintData")
@interface PrintData : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7EKuaiDa11PrintDevice")
@interface PrintDevice : BSRemotePeer
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@end


@interface PrintDevice (SWIFT_EXTENSION(EKuaiDa))
- (BOOL)isConnected SWIFT_WARN_UNUSED_RESULT;
@end

@class TsplPaperSize;
@class TsplVerticalGap;
@class TsplCmdContent;

/// TSPL commond 配置
SWIFT_CLASS("_TtC7EKuaiDa24TSPlCommondConfiguration")
@interface TSPlCommondConfiguration : NSObject
/// 标签size
@property (nonatomic, strong) TsplPaperSize * _Nonnull paper;
/// 一般垂直间距
@property (nonatomic, strong) TsplVerticalGap * _Nonnull gap;
/// 长度系统 默认 mm 指定长度标准后，除特殊指定标准外，之后所有尺寸命令都是以此为准
@property (nonatomic) enum LengthUnitSystem lengthUnit;
/// 该指令用于控制使用剥离模式和切刀模式时调整每张标签停止的位置。
@property (nonatomic) float offset;
/// 该命令用于移动标签的垂直位置。正值将标签从打印方向进一步移动，负值将标签反方向打印。 [-90, 90] 默认设置0
@property (nonatomic) NSInteger shift;
/// 该命令定义标签的参考坐标原点。参考点随打印方向而变化, 以点为单位
@property (nonatomic, strong) BSPoint * _Nullable reference;
/// 该命令用于打印出纸方向和镜像图像。m 0 正常，1 反向; n:   0: 打印正常图像, 1: 打印镜像图像
@property (nonatomic, strong) TsplCmdContent * _Nonnull direction;
@property (nonatomic, strong) BSPoint * _Nullable gapDetect;
- (nonnull instancetype)initWithPaper:(TsplPaperSize * _Nonnull)paper gap:(TsplVerticalGap * _Nonnull)gap lengthUnit:(enum LengthUnitSystem)lengthUnit offset:(float)offset shift:(NSInteger)shift reference:(BSPoint * _Nullable)reference direction:(TsplCmdContent * _Nonnull)direction gapDetect:(BSPoint * _Nullable)gapDetect OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7EKuaiDa15TemplateRequest")
@interface TemplateRequest : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7EKuaiDa16TemplateResponse")
@interface TemplateResponse : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// tspl 命令 值 参数
SWIFT_CLASS("_TtC7EKuaiDa14TsplCmdContent")
@interface TsplCmdContent : NSObject
@property (nonatomic) float m;
@property (nonatomic) float n;
- (nonnull instancetype)initWithM:(float)m n:(float)n OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum TsplSizeUnit : NSInteger;

SWIFT_CLASS("_TtC7EKuaiDa13TsplPaperSize")
@interface TsplPaperSize : NSObject
@property (nonatomic) NSInteger width;
@property (nonatomic) NSInteger height;
@property (nonatomic) enum TsplSizeUnit type;
- (nonnull instancetype)initWithWidth:(NSInteger)width height:(NSInteger)height type:(enum TsplSizeUnit)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 注意：
/// 203 DPI: 1mm=8dots
/// 300 DPI: 1mm=12dots
typedef SWIFT_ENUM(NSInteger, TsplSizeUnit, closed) {
  TsplSizeUnitDot = 0,
  TsplSizeUnitMetric = 1,
  TsplSizeUnitEnMetric = 2,
};


SWIFT_CLASS("_TtC7EKuaiDa15TsplVerticalGap")
@interface TsplVerticalGap : NSObject
@property (nonatomic) float height;
@property (nonatomic) enum LengthUnitSystem unit;
- (nonnull instancetype)initWithHeight:(float)height unit:(enum LengthUnitSystem)unit OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
